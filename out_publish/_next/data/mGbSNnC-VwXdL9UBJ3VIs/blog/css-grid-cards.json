{"pageProps":{"mdxSource":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Responsive cards with css grid.\"), mdx(\"p\", null, \"Whenever we want to display a bunch of cards on a page we want them to be responsive. We want the columns and rows to be dynamic depending on the screen width. To that end we could add a bunch of media queries to our code and be done with it. However, css grid makes this easy for us and without the need for media queries.\"), mdx(\"p\", null, \"There are many hundreds of articles out there in on the internet that explain this very concept. Im writing this post more as a reminder to myself as i always find myself forgetting the syntax and having to pull up other projects which i have used it in. Which i slowly becoming basically all of them.\"), mdx(\"p\", null, \"Lets say we have a container, this container will define our grid. Inside our container we have our card components which will be iterated over and displayed in a nice, responsive grid. Lets gooooo...\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<div\\n  sx={{\\n    margin: '2em auto',\\n    display: 'grid',\\n    gridAutoRows: 'auto',\\n    gridTemplateColumns: 'repeat(auto-fill, minmax(auto, 450px))',\\n    gap: '1.5em',\\n    justifyContent: 'space-evenly',\\n    width: '100%',\\n  }}\\n>\\n  {projects.map(({ node: project }) => (\\n    <ProjectCard key={project.id} {...project} />\\n  ))}\\n</div>\\n\")), mdx(\"p\", null, \"Can you spot the magic line?\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"gridTemplateColumns: 'repeat(auto-fill, minmax(auto, 450px))';\\n\")), mdx(\"p\", null, \"Here we are telling the grid template columns property that depending on the amount of iterated components we want, to auto fill each column by how ever many components there are. The second argument is a minmax function which is saying that at their smallest the cards should have an auto width (this can be set to anything lower than the second param, which is the largest width) and at their largest they should have no more than 450px width. The repeat function which takes this information ensures that the end result is dynamic by repeating its input for as many iterables as there are.\"), mdx(\"p\", null, \"You are welcome future me (any anyone else who finds this helpful!) \\uD83D\\uDE03\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Responsive cards with css grid.</p><p>Whenever we want to display a bunch of cards on a page we want them to be responsive. We want the columns and rows to be dynamic depending on the screen width. To that end we could add a bunch of media queries to our code and be done with it. However, css grid makes this easy for us and without the need for media queries.</p><p>There are many hundreds of articles out there in on the internet that explain this very concept. Im writing this post more as a reminder to myself as i always find myself forgetting the syntax and having to pull up other projects which i have used it in. Which i slowly becoming basically all of them.</p><p>Lets say we have a container, this container will define our grid. Inside our container we have our card components which will be iterated over and displayed in a nice, responsive grid. Lets gooooo...</p><pre><pre class=\"prism-code language-jsx\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag punctuation\" style=\"color:rgb(212, 212, 212)\">&lt;</span><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\">div</span><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\">  </span><span class=\"token tag attr-name\" style=\"color:rgb(156, 220, 254)\">sx</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">    margin</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag script language-javascript string\" style=\"color:rgb(206, 145, 120)\">&#x27;2em auto&#x27;</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">,</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">    display</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag script language-javascript string\" style=\"color:rgb(206, 145, 120)\">&#x27;grid&#x27;</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">,</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">    gridAutoRows</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag script language-javascript string\" style=\"color:rgb(206, 145, 120)\">&#x27;auto&#x27;</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">,</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">    gridTemplateColumns</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag script language-javascript string\" style=\"color:rgb(206, 145, 120)\">&#x27;repeat(auto-fill, minmax(auto, 450px))&#x27;</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">,</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">    gap</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag script language-javascript string\" style=\"color:rgb(206, 145, 120)\">&#x27;1.5em&#x27;</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">,</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">    justifyContent</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag script language-javascript string\" style=\"color:rgb(206, 145, 120)\">&#x27;space-evenly&#x27;</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">,</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">    width</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag script language-javascript string\" style=\"color:rgb(206, 145, 120)\">&#x27;100%&#x27;</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">,</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">  </span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\"></span><span class=\"token tag punctuation\" style=\"color:rgb(212, 212, 212)\">&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token plain\">projects</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">map</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token parameter punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token parameter\"> node</span><span class=\"token parameter punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token parameter\"> project </span><span class=\"token parameter punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=&gt;</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">    </span><span class=\"token tag punctuation\" style=\"color:rgb(212, 212, 212)\">&lt;</span><span class=\"token tag class-name\" style=\"color:rgb(78, 201, 176)\">ProjectCard</span><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag attr-name\" style=\"color:rgb(156, 220, 254)\">key</span><span class=\"token tag script language-javascript script-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">project</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token tag script language-javascript\" style=\"color:rgb(78, 201, 176)\">id</span><span class=\"token tag script language-javascript punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag spread punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token tag spread punctuation\" style=\"color:rgb(212, 212, 212)\">...</span><span class=\"token tag spread attr-value\" style=\"color:rgb(206, 145, 120)\">project</span><span class=\"token tag spread punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\"> </span><span class=\"token tag punctuation\" style=\"color:rgb(212, 212, 212)\">/&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token tag punctuation\" style=\"color:rgb(212, 212, 212)\">&lt;/</span><span class=\"token tag\" style=\"color:rgb(78, 201, 176)\">div</span><span class=\"token tag punctuation\" style=\"color:rgb(212, 212, 212)\">&gt;</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><p>Can you spot the magic line?</p><pre><pre class=\"prism-code language-jsx\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">gridTemplateColumns</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;repeat(auto-fill, minmax(auto, 450px))&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><p>Here we are telling the grid template columns property that depending on the amount of iterated components we want, to auto fill each column by how ever many components there are. The second argument is a minmax function which is saying that at their smallest the cards should have an auto width (this can be set to anything lower than the second param, which is the largest width) and at their largest they should have no more than 450px width. The repeat function which takes this information ensures that the end result is dynamic by repeating its input for as many iterables as there are.</p><p>You are welcome future me (any anyone else who finds this helpful!) 😃</p>","scope":{"title":"CSS grid responsive cards","published":true,"category":"CSS","author":"Richard Haines","tags":["css grid","responsive cards"],"pin":false,"description":"How to create responsive cards with css grid","growth":"full"}},"frontMatter":{"title":"CSS grid responsive cards","published":true,"category":"CSS","author":"Richard Haines","tags":["css grid","responsive cards"],"pin":false,"description":"How to create responsive cards with css grid","growth":"full"},"slug":["css-grid-cards"]},"__N_SSG":true}