{"pageProps":{"mdxSource":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is a collection of notes for everyday git commands.\"), mdx(\"h2\", null, \"Add an existing project to git\"), mdx(\"p\", null, \"Create a new repository on github, then from the projects root:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git init\\ngit add .\\ngit commit -m \\\"My first commit\\\"\\ngit remote add origin <remote repository url>\\ngit remote -v\\ngit push origin master\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"First we are initializing the local directory as a git repo\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then we are adding the new files in your local repo, this stages them for the first commit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then we commit the files that we just staged\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Copy the remote repo url from your github repo and add it to the remote repo where your local repo will be published\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set the new remote\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Push the changes in your local repo to github\")), mdx(\"h2\", null, \"Amend a commit message\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \" git commit --amend\\n\")), mdx(\"h2\", null, \"Commit your work\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git add .\\ngit commit -m \\\"my commit message\\\"\\ngit push\\n\")), mdx(\"h2\", null, \"Squash commits\"), mdx(\"p\", null, \"Check how many commits have been made:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git rev-list HEAD --count\\n\")), mdx(\"p\", null, \"Use that number to tell git how many commits to squash into one:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git rebase -i HEAD~<number-of-commits>\\n\")), mdx(\"h2\", null, \"Create a new branch\"), mdx(\"p\", null, \"To create a new branch checkout the branch you want to base your work on:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git checkout myOriginalBranch\\n\")), mdx(\"p\", null, \"Then its as simple as doing a pull to make sure you have the latest work and adding the -b tag with your new branches name:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git pull\\ngit checkout -b myNewBranch\\n\")), mdx(\"h2\", null, \"Clone repo and push to new repo\"), mdx(\"p\", null, \"Create a new repo on github then clone the repo you want to copy.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git clone <repo-url> // clone the repo\\ngit remote rename origin upstream // rename the repo upstream\\ngit remote add origin <new-repo-url> // add the new repos url to your remote\\ngit push origin master // push the changes to your remote repo\\ngit pull upstream master && git push origin master\\n\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>This is a collection of notes for everyday git commands.</p><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Add an existing project to git</p><p>Create a new repository on github, then from the projects root:</p><pre><pre class=\"prism-code language-bash\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> init</span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">add</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\" style=\"color:rgb(78, 201, 176)\">.</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> commit -m </span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&quot;My first commit&quot;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> remote </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">add</span><span class=\"token plain\"> origin </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&lt;</span><span class=\"token plain\">remote repository url</span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&gt;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> remote -v</span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> push origin master</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><style data-emotion-css=\"2yqebn\">.css-2yqebn{list-style-type:bullet;margin-left:1em;margin-top:2px;margin-bottom:2px;}</style><ul role=\"list\" class=\"css-2yqebn\"><li class=\"css-0\">First we are initializing the local directory as a git repo</li><li class=\"css-0\">Then we are adding the new files in your local repo, this stages them for the first commit</li><li class=\"css-0\">Then we commit the files that we just staged</li><li class=\"css-0\">Copy the remote repo url from your github repo and add it to the remote repo where your local repo will be published</li><li class=\"css-0\">Set the new remote</li><li class=\"css-0\">Push the changes in your local repo to github</li></ul><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Amend a commit message</p><pre><pre class=\"prism-code language-bash\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> commit --amend</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Commit your work</p><pre><pre class=\"prism-code language-bash\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">add</span><span class=\"token plain\"> </span><span class=\"token builtin class-name\" style=\"color:rgb(78, 201, 176)\">.</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> commit -m </span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&quot;my commit message&quot;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> push</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Squash commits</p><p>Check how many commits have been made:</p><pre><pre class=\"prism-code language-bash\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> rev-list HEAD --count</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><p>Use that number to tell git how many commits to squash into one:</p><pre><pre class=\"prism-code language-bash\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> rebase -i HEAD~</span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&lt;</span><span class=\"token plain\">number-of-commits</span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&gt;</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Create a new branch</p><p>To create a new branch checkout the branch you want to base your work on:</p><pre><pre class=\"prism-code language-bash\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> checkout myOriginalBranch</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><p>Then its as simple as doing a pull to make sure you have the latest work and adding the -b tag with your new branches name:</p><pre><pre class=\"prism-code language-bash\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> pull</span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> checkout -b myNewBranch</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Clone repo and push to new repo</p><p>Create a new repo on github then clone the repo you want to copy.</p><pre><pre class=\"prism-code language-bash\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> clone </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&lt;</span><span class=\"token plain\">repo-url</span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&gt;</span><span class=\"token plain\"> // clone the repo</span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> remote </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">rename</span><span class=\"token plain\"> origin upstream // </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">rename</span><span class=\"token plain\"> the repo upstream</span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> remote </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">add</span><span class=\"token plain\"> origin </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&lt;</span><span class=\"token plain\">new-repo-url</span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&gt;</span><span class=\"token plain\"> // </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">add</span><span class=\"token plain\"> the new repos url to your remote</span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> push origin master // push the changes to your remote repo</span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> pull upstream master </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">&amp;&amp;</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">git</span><span class=\"token plain\"> push origin master</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre>","scope":{"title":"Everyday GIT commands","published":true,"category":"GIT","author":"Richard Haines","tags":["git","version control"],"pin":false,"description":"Handy everyday git commands","growth":"baby"}},"frontMatter":{"title":"Everyday GIT commands","published":true,"category":"GIT","author":"Richard Haines","tags":["git","version control"],"pin":false,"description":"Handy everyday git commands","growth":"baby"},"slug":["everyday-git-commands"]},"__N_SSG":true}