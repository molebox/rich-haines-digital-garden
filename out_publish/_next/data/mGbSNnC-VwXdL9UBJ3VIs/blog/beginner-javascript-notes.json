{"pageProps":{"mdxSource":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Ive been taking the Beginner JavaScript course by a certain Wes Bos. These are\\nmy notes. This will be updated as and when i cover more ground in the course.\\nI highly recommend you purchase it, its great for a beginner or as a refresh.\"), mdx(\"p\", null, \"Course link: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://beginnerjavascript.com/\"\n  }), \"beginnerjavascript.com\")), mdx(\"h2\", null, \"Global Variables\"), mdx(\"p\", null, \"A variable created in a javascript file while not inside of a function, module or code block. Can be accessed from anywhere.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"var variables are attached to the window objects Scope\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anything in the global scope is attached to the window object except const and let. This includes custom functions\")), mdx(\"h2\", null, \"Function Scope\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any variables declared within a function are only available within that function and not from outside the function.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scope lookup: If a variable in a function is used but not declared in the function it will go up a level in the scope to find it. That could be in a parent function if nested or to the global scope.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Variable shadow is two variables in different scope with the same name.\")), mdx(\"h2\", null, \"Block Scope\"), mdx(\"p\", null, \"Curly braces are blocks, like if statements. Variable declarations inside are scoped to the block.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"if (1 === 1) {\\n  const yep = true;\\n}\\n\")), mdx(\"p\", null, \"The variable yep is unavailable outside of the if statement. If however it was changed form a const to a var then it would be function scoped and available outside the if statement.\"), mdx(\"h2\", null, \"Hoisting\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hoisting allows accessing functions and variables before they have been created.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The javascript compiler will re-arrange the file so that a function that is run before its declaration will swap places so its declared then run.\")), mdx(\"h2\", null, \"Closures\"), mdx(\"p\", null, \"Closures give the ability to access a parent level scope from a child scope, even after the parent level scope has been destroyed.\"), mdx(\"p\", null, \"This example is taken directly from the course:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function outer() {\\n  const outerVar = 'Hey I am the outer Var!';\\n  function inner() {\\n    const innerVar = 'Hey I am an inner var!';\\n    console.log(innerVar);\\n    console.log(outerVar);\\n  }\\n  return inner;\\n}\\n\\nconst innerFn = outer();\\ninnerFn();\\n\")), mdx(\"p\", null, \"For a closure to work we must return a function from within a function where the inner functions scope references something from the outer functions scope. Looking at the above example, when we run innerFn() the two console logs are still registered to the console even though the outerVar (as part of the parent/outer function) would normally have been garbage collected having been called during the innerFns creation. This gives us the ability to keep access to variables that would have otherwise been destroyed.\"), mdx(\"p\", null, \"Lets look at another example.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function createFamily(familyName = '') {\\n  const familyMembers = Math.floor(Math.random() * 10);\\n  return function newFamily() {\\n    return `The ${familyName} family is made up of ${familyMembers} people`;\\n  };\\n}\\n\\nconst hainesFamily = createFamily('Haines');\\nconst iserydFamily = createFamily('Iseryd');\\nconst robinsFamily = createFamily('Robins');\\n\\nconsole.log(hainesFamily()); // output will be 'The Haines family is made up of (random number from 1 - 9) people. '\\nconsole.log(iserydFamily()); // output will be 'The Iseryd family is made up of (random number from 1 - 9) people. '\\nconsole.log(robinsFamily()); // output will be 'The Robins family is made up of (random number from 1 - 9) people. '\\n\")), mdx(\"p\", null, \"In this example we have an outer function that will be used to create a family. Its scoped variable familyMembers will create a random number from 1 - 9. The inner function will return a string which gives the outer functions parameter as the family name and then uses the outer functions random number as the amount of people in the family. We could go one step further and use the inner function even though the outer function has since been destroyed having been creating via its calling when creating the different families.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"function createFamily(familyName = '') {\\n  const familyMembers = Math.floor(Math.random() * 10);\\n  return function newFamily(familyGreeting) {\\n    return `The ${familyName} family is made up of ${familyMembers} people. We say ${familyGreeting}`;\\n  };\\n}\\n\\nconst hainesFamily = createFamily('Haines');\\nconst iserydFamily = createFamily('Iseryd');\\nconst robinsFamily = createFamily('Robins');\\n\\nconsole.log(hainesFamily('Yo!')); // output will be 'The Haines family is made up of (random number from 1 - 9) people. We say Yo! '\\nconsole.log(iserydFamily('Word Up!')); // output will be 'The Iseryd family is made up of (random number from 1 - 9) people. We say Word Up! '\\nconsole.log(robinsFamily('Hiya!')); // output will be 'The Robins family is made up of (random number from 1 - 9) people. We say Hiya! '\\n\")), mdx(\"p\", null, \"More to follow.... \\uD83D\\uDE0A\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Ive been taking the Beginner JavaScript course by a certain Wes Bos. These are\nmy notes. This will be updated as and when i cover more ground in the course.\nI highly recommend you purchase it, its great for a beginner or as a refresh.</p><p>Course link: <a href=\"https://beginnerjavascript.com/\">beginnerjavascript.com</a></p><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Global Variables</p><p>A variable created in a javascript file while not inside of a function, module or code block. Can be accessed from anywhere.</p><style data-emotion-css=\"2yqebn\">.css-2yqebn{list-style-type:bullet;margin-left:1em;margin-top:2px;margin-bottom:2px;}</style><ul role=\"list\" class=\"css-2yqebn\"><li class=\"css-0\">var variables are attached to the window objects Scope</li><li class=\"css-0\">Anything in the global scope is attached to the window object except const and let. This includes custom functions</li></ul><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Function Scope</p><style data-emotion-css=\"2yqebn\">.css-2yqebn{list-style-type:bullet;margin-left:1em;margin-top:2px;margin-bottom:2px;}</style><ul role=\"list\" class=\"css-2yqebn\"><li class=\"css-0\">Any variables declared within a function are only available within that function and not from outside the function.</li><li class=\"css-0\">Scope lookup: If a variable in a function is used but not declared in the function it will go up a level in the scope to find it. That could be in a parent function if nested or to the global scope.</li><li class=\"css-0\">Variable shadow is two variables in different scope with the same name.</li></ul><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Block Scope</p><p>Curly braces are blocks, like if statements. Variable declarations inside are scoped to the block.</p><pre><pre class=\"prism-code language-js\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">if</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token number\" style=\"color:rgb(181, 206, 168)\">1</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">===</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(181, 206, 168)\">1</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> yep </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token boolean\">true</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">}</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><p>The variable yep is unavailable outside of the if statement. If however it was changed form a const to a var then it would be function scoped and available outside the if statement.</p><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Hoisting</p><style data-emotion-css=\"2yqebn\">.css-2yqebn{list-style-type:bullet;margin-left:1em;margin-top:2px;margin-bottom:2px;}</style><ul role=\"list\" class=\"css-2yqebn\"><li class=\"css-0\">Hoisting allows accessing functions and variables before they have been created.</li><li class=\"css-0\">The javascript compiler will re-arrange the file so that a function that is run before its declaration will swap places so its declared then run.</li></ul><style data-emotion-css=\"15salui\">.css-15salui{font-size:1xl;font-family:heading;margin-top:3px;margin-bottom:3px;}</style><p class=\"chakra-text css-15salui\">Closures</p><p>Closures give the ability to access a parent level scope from a child scope, even after the parent level scope has been destroyed.</p><p>This example is taken directly from the course:</p><pre><pre class=\"prism-code language-js\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">outer</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> outerVar </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Hey I am the outer Var!&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">inner</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> innerVar </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Hey I am an inner var!&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">    </span><span class=\"token console class-name\" style=\"color:rgb(78, 201, 176)\">console</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">log</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token plain\">innerVar</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">    </span><span class=\"token console class-name\" style=\"color:rgb(78, 201, 176)\">console</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">log</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token plain\">outerVar</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">return</span><span class=\"token plain\"> inner</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\" style=\"display:inline-block\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> innerFn </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">outer</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">innerFn</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><p>For a closure to work we must return a function from within a function where the inner functions scope references something from the outer functions scope. Looking at the above example, when we run innerFn() the two console logs are still registered to the console even though the outerVar (as part of the parent/outer function) would normally have been garbage collected having been called during the innerFns creation. This gives us the ability to keep access to variables that would have otherwise been destroyed.</p><p>Lets look at another example.</p><pre><pre class=\"prism-code language-js\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">createFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token plain\">familyName </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> familyMembers </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token known-class-name class-name\" style=\"color:rgb(78, 201, 176)\">Math</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">floor</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token known-class-name class-name\" style=\"color:rgb(78, 201, 176)\">Math</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">random</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">*</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(181, 206, 168)\">10</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">return</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">newFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">return</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(206, 145, 120)\">`</span><span class=\"token template-string string\" style=\"color:rgb(206, 145, 120)\">The </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">${</span><span class=\"token template-string interpolation\">familyName</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token template-string string\" style=\"color:rgb(206, 145, 120)\"> family is made up of </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">${</span><span class=\"token template-string interpolation\">familyMembers</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token template-string string\" style=\"color:rgb(206, 145, 120)\"> people</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(206, 145, 120)\">`</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\" style=\"display:inline-block\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> hainesFamily </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">createFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Haines&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> iserydFamily </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">createFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Iseryd&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> robinsFamily </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">createFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Robins&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\" style=\"display:inline-block\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token console class-name\" style=\"color:rgb(78, 201, 176)\">console</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">log</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">hainesFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(106, 153, 85)\">// output will be &#x27;The Haines family is made up of (random number from 1 - 9) people. &#x27;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token console class-name\" style=\"color:rgb(78, 201, 176)\">console</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">log</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">iserydFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(106, 153, 85)\">// output will be &#x27;The Iseryd family is made up of (random number from 1 - 9) people. &#x27;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token console class-name\" style=\"color:rgb(78, 201, 176)\">console</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">log</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">robinsFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(106, 153, 85)\">// output will be &#x27;The Robins family is made up of (random number from 1 - 9) people. &#x27;</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><p>In this example we have an outer function that will be used to create a family. Its scoped variable familyMembers will create a random number from 1 - 9. The inner function will return a string which gives the outer functions parameter as the family name and then uses the outer functions random number as the amount of people in the family. We could go one step further and use the inner function even though the outer function has since been destroyed having been creating via its calling when creating the different families.</p><pre><pre class=\"prism-code language-js\" style=\"color:#9CDCFE;background-color:#1E1E1E;overflow:scroll;margin-top:20px;margin-bottom:20px;padding:16px;display:flex;flex-direction:column;width:100%;position:relative\"><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">createFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token plain\">familyName </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> familyMembers </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token known-class-name class-name\" style=\"color:rgb(78, 201, 176)\">Math</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">floor</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token known-class-name class-name\" style=\"color:rgb(78, 201, 176)\">Math</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">random</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">*</span><span class=\"token plain\"> </span><span class=\"token number\" style=\"color:rgb(181, 206, 168)\">10</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">return</span><span class=\"token plain\"> </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">function</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">newFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token parameter\">familyGreeting</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">{</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">    </span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">return</span><span class=\"token plain\"> </span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(206, 145, 120)\">`</span><span class=\"token template-string string\" style=\"color:rgb(206, 145, 120)\">The </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">${</span><span class=\"token template-string interpolation\">familyName</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token template-string string\" style=\"color:rgb(206, 145, 120)\"> family is made up of </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">${</span><span class=\"token template-string interpolation\">familyMembers</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token template-string string\" style=\"color:rgb(206, 145, 120)\"> people. We say </span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">${</span><span class=\"token template-string interpolation\">familyGreeting</span><span class=\"token template-string interpolation interpolation-punctuation punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token template-string template-punctuation string\" style=\"color:rgb(206, 145, 120)\">`</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">}</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\" style=\"display:inline-block\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> hainesFamily </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">createFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Haines&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> iserydFamily </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">createFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Iseryd&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token keyword\" style=\"color:rgb(86, 156, 214)\">const</span><span class=\"token plain\"> robinsFamily </span><span class=\"token operator\" style=\"color:rgb(212, 212, 212)\">=</span><span class=\"token plain\"> </span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">createFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Robins&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\" style=\"display:inline-block\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token console class-name\" style=\"color:rgb(78, 201, 176)\">console</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">log</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">hainesFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Yo!&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(106, 153, 85)\">// output will be &#x27;The Haines family is made up of (random number from 1 - 9) people. We say Yo! &#x27;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token console class-name\" style=\"color:rgb(78, 201, 176)\">console</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">log</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">iserydFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Word Up!&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(106, 153, 85)\">// output will be &#x27;The Iseryd family is made up of (random number from 1 - 9) people. We say Word Up! &#x27;</span><span class=\"token plain\"></span></div><div class=\"token-line\" style=\"color:#9CDCFE\"><span class=\"token plain\"></span><span class=\"token console class-name\" style=\"color:rgb(78, 201, 176)\">console</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">.</span><span class=\"token method function property-access\" style=\"color:rgb(220, 220, 170)\">log</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token function\" style=\"color:rgb(220, 220, 170)\">robinsFamily</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">(</span><span class=\"token string\" style=\"color:rgb(206, 145, 120)\">&#x27;Hiya!&#x27;</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">)</span><span class=\"token punctuation\" style=\"color:rgb(212, 212, 212)\">;</span><span class=\"token plain\"> </span><span class=\"token comment\" style=\"color:rgb(106, 153, 85)\">// output will be &#x27;The Robins family is made up of (random number from 1 - 9) people. We say Hiya! &#x27;</span></div><style data-emotion-css=\"13tafan\">.css-13tafan{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all 250ms;transition:all 250ms;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;white-space:nowrap;vertical-align:middle;outline:none;width:auto;justify-self:flex-end;position:absolute;top:0;right:20px;color:brand.crayola.300;margin-top:4px;text-transform:uppercase;font-weight:600;}</style><button type=\"button\" class=\"chakra-button css-13tafan\" aria-label=\"Copy text\" role=\"button\">Grab It</button></pre></pre><p>More to follow.... 😊</p>","scope":{"title":"Notes on JavaScript","published":true,"category":"JavaScript","author":"Richard Haines","tags":["javascript"],"pin":false,"description":"Some notes on Javascript stuff","growth":"mid"}},"frontMatter":{"title":"Notes on JavaScript","published":true,"category":"JavaScript","author":"Richard Haines","tags":["javascript"],"pin":false,"description":"Some notes on Javascript stuff","growth":"mid"},"slug":["beginner-javascript-notes"]},"__N_SSG":true}